{"version":3,"sources":["App.js","serviceWorker.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","backgroundColor","hero","backgroundImage","height","backgroundPosition","backgroundRepeat","backgroundSize","position","display","justifyContent","alignItems","color","fontSize","breakpoints","down","blogsContainer","paddingTop","spacing","blogTitle","fontWeight","paddingBottom","card","maxWidth","media","cardActions","margin","author","paginationContainer","App","classes","className","AppBar","Toolbar","Typography","variant","Box","Container","Grid","container","item","xs","sm","md","Card","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","component","CardActions","Avatar","src","ml","my","Pagination","count","Boolean","window","location","hostname","match","createMuiTheme","palette","primary","main","background","default","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.efbc6758.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport Pagination from '@material-ui/lab/Pagination';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"#fff\"\n  },\n  hero: {\n    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1558981852-426c6c22a060?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80')`,\n    height: \"500px\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    position: \"relative\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    color: \"#fff\",\n    fontSize: \"4rem\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 300,\n      fontSize: \"3em\"\n    }\n  },\n  blogsContainer: {\n    paddingTop: theme.spacing(3)\n  },\n  blogTitle: {\n    fontWeight: 800,\n    paddingBottom: theme.spacing(3)\n  },\n  card: {\n    maxWidth: \"100%\",\n  },\n  media: {\n    height: 240\n  },\n  cardActions: {\n    display: \"flex\",\n    margin: \"0 10px\",\n    justifyContent: \"space-between\"\n  },\n  author: {\n    display: \"flex\"\n  },\n  paginationContainer: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"primary\" >\n            Shahir's Blog \n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Box className={classes.hero}>\n        <Box>Hello World</Box>\n      </Box>\n      <Container maxWidth=\"lg\" className={classes.blogsContainer}>\n        <Typography variant=\"h4\" className={classes.blogTitle}>\n          Articles\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"https://images.pexels.com/photos/2004161/pexels-photo-2004161.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    The 80/20 Principle\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                    across all continents except Antarctica\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions className={classes.cardActions}>\n                <Box className={classes.author}>\n                  <Avatar src=\"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\n                  <Box ml={2}>\n                    <Typography variant=\"subtitle2\" component=\"p\">\n                      Shahir Abdullah\n                    </Typography>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n                      July 31, 2020\n                    </Typography>\n                  </Box>\n                </Box>\n                <Box>\n                  <BookmarkBorderIcon />\n                </Box>\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"https://images.pexels.com/photos/34600/pexels-photo.jpg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    1% Rule\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    The power of improving 1% everyday\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions className={classes.cardActions}>\n                <Box className={classes.author}>\n                  <Avatar src=\"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2734&q=80\" />\n                  <Box ml={2}>\n                    <Typography variant=\"subtitle2\" component=\"p\">\n                      Shahir Abdullah\n                    </Typography>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n                      Aug 30, 2020\n                    </Typography>\n                  </Box>\n                </Box>\n                <Box>\n                  <BookmarkBorderIcon />\n                </Box>\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"https://images.pexels.com/photos/1181263/pexels-photo-1181263.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    React useContext\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                    across all continents except Antarctica\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions className={classes.cardActions}>\n                <Box className={classes.author}>\n                  <Avatar src=\"https://images.pexels.com/photos/415829/pexels-photo-415829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\n                  <Box ml={2}>\n                    <Typography variant=\"subtitle2\" component=\"p\">\n                      Guy Clemons\n                    </Typography>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n                      May 14, 2020\n                    </Typography>\n                  </Box>\n                </Box>\n                <Box>\n                  <BookmarkBorderIcon />\n                </Box>\n              </CardActions>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className={classes.card}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.media}\n                  image=\"https://images.pexels.com/photos/325111/pexels-photo-325111.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n                  title=\"Contemplative Reptile\"\n                />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    React useContext\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                    across all continents except Antarctica\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n              <CardActions className={classes.cardActions}>\n                <Box className={classes.author}>\n                  <Avatar src=\"https://images.unsplash.com/photo-1584999734482-0361aecad844?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1100&q=80\" />\n                  <Box ml={2}>\n                    <Typography variant=\"subtitle2\" component=\"p\">\n                      Guy Clemons\n                    </Typography>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n                      May 14, 2020\n                    </Typography>\n                  </Box>\n                </Box>\n                <Box>\n                  <BookmarkBorderIcon />\n                </Box>\n              </CardActions>\n            </Card>\n          </Grid>\n        </Grid>\n        <Box my={4} className={classes.paginationContainer}>\n          <Pagination count={10} />\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#764abc\"\n        }\n    },\n    background: {\n        default: \"#fff\"\n    }\n})\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from \"./theme\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}